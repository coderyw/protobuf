// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: fuzz.proto

package fuzztests

import (
	fmt "fmt"
	_ "github.com/coderyw/protobuf/gogoproto"
	proto "github.com/coderyw/protobuf/proto"
	math "math"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Nil struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nil) Reset()         { *m = Nil{} }
func (m *Nil) String() string { return proto.CompactTextString(m) }
func (*Nil) ProtoMessage()    {}
func (*Nil) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e61ff73369f13d2, []int{0}
}
func (m *Nil) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nil.Unmarshal(m, b)
}
func (m *Nil) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nil.Marshal(b, m, deterministic)
}
func (m *Nil) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nil.Merge(m, src)
}
func (m *Nil) XXX_Size() int {
	return xxx_messageInfo_Nil.Size(m)
}
func (m *Nil) XXX_DiscardUnknown() {
	xxx_messageInfo_Nil.DiscardUnknown(m)
}

var xxx_messageInfo_Nil proto.InternalMessageInfo

func (m *Nil) IsNil() bool {
	return m == nil

}

type NinRepPackedNative struct {
	Field1               []float64 `protobuf:"fixed64,1,rep,packed,name=Field1" json:"Field1,omitempty"`
	Field2               []float32 `protobuf:"fixed32,2,rep,packed,name=Field2" json:"Field2,omitempty"`
	Field3               []int32   `protobuf:"varint,3,rep,packed,name=Field3" json:"Field3,omitempty"`
	Field4               []int64   `protobuf:"varint,4,rep,packed,name=Field4" json:"Field4,omitempty"`
	Field5               []uint32  `protobuf:"varint,5,rep,packed,name=Field5" json:"Field5,omitempty"`
	Field6               []uint64  `protobuf:"varint,6,rep,packed,name=Field6" json:"Field6,omitempty"`
	Field7               []int32   `protobuf:"zigzag32,7,rep,packed,name=Field7" json:"Field7,omitempty"`
	Field8               []int64   `protobuf:"zigzag64,8,rep,packed,name=Field8" json:"Field8,omitempty"`
	Field9               []uint32  `protobuf:"fixed32,9,rep,packed,name=Field9" json:"Field9,omitempty"`
	Field10              []int32   `protobuf:"fixed32,10,rep,packed,name=Field10" json:"Field10,omitempty"`
	Field11              []uint64  `protobuf:"fixed64,11,rep,packed,name=Field11" json:"Field11,omitempty"`
	Field12              []int64   `protobuf:"fixed64,12,rep,packed,name=Field12" json:"Field12,omitempty"`
	Field13              []bool    `protobuf:"varint,13,rep,packed,name=Field13" json:"Field13,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *NinRepPackedNative) Reset()         { *m = NinRepPackedNative{} }
func (m *NinRepPackedNative) String() string { return proto.CompactTextString(m) }
func (*NinRepPackedNative) ProtoMessage()    {}
func (*NinRepPackedNative) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e61ff73369f13d2, []int{1}
}
func (m *NinRepPackedNative) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NinRepPackedNative.Unmarshal(m, b)
}
func (m *NinRepPackedNative) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NinRepPackedNative.Marshal(b, m, deterministic)
}
func (m *NinRepPackedNative) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NinRepPackedNative.Merge(m, src)
}
func (m *NinRepPackedNative) XXX_Size() int {
	return xxx_messageInfo_NinRepPackedNative.Size(m)
}
func (m *NinRepPackedNative) XXX_DiscardUnknown() {
	xxx_messageInfo_NinRepPackedNative.DiscardUnknown(m)
}

var xxx_messageInfo_NinRepPackedNative proto.InternalMessageInfo

func (m *NinRepPackedNative) GetField1() []float64 {
	if m != nil {
		return m.Field1
	}
	return nil
}

func (m *NinRepPackedNative) GetField2() []float32 {
	if m != nil {
		return m.Field2
	}
	return nil
}

func (m *NinRepPackedNative) GetField3() []int32 {
	if m != nil {
		return m.Field3
	}
	return nil
}

func (m *NinRepPackedNative) GetField4() []int64 {
	if m != nil {
		return m.Field4
	}
	return nil
}

func (m *NinRepPackedNative) GetField5() []uint32 {
	if m != nil {
		return m.Field5
	}
	return nil
}

func (m *NinRepPackedNative) GetField6() []uint64 {
	if m != nil {
		return m.Field6
	}
	return nil
}

func (m *NinRepPackedNative) GetField7() []int32 {
	if m != nil {
		return m.Field7
	}
	return nil
}

func (m *NinRepPackedNative) GetField8() []int64 {
	if m != nil {
		return m.Field8
	}
	return nil
}

func (m *NinRepPackedNative) GetField9() []uint32 {
	if m != nil {
		return m.Field9
	}
	return nil
}

func (m *NinRepPackedNative) GetField10() []int32 {
	if m != nil {
		return m.Field10
	}
	return nil
}

func (m *NinRepPackedNative) GetField11() []uint64 {
	if m != nil {
		return m.Field11
	}
	return nil
}

func (m *NinRepPackedNative) GetField12() []int64 {
	if m != nil {
		return m.Field12
	}
	return nil
}

func (m *NinRepPackedNative) GetField13() []bool {
	if m != nil {
		return m.Field13
	}
	return nil
}

func (m *NinRepPackedNative) SetField1_(val []float64) {
	if m != nil {
		m.Field1 = val
	}
	return
}

func (m *NinRepPackedNative) SetField2_(val []float32) {
	if m != nil {
		m.Field2 = val
	}
	return
}

func (m *NinRepPackedNative) SetField3_(val []int32) {
	if m != nil {
		m.Field3 = val
	}
	return
}

func (m *NinRepPackedNative) SetField4_(val []int64) {
	if m != nil {
		m.Field4 = val
	}
	return
}

func (m *NinRepPackedNative) SetField5_(val []uint32) {
	if m != nil {
		m.Field5 = val
	}
	return
}

func (m *NinRepPackedNative) SetField6_(val []uint64) {
	if m != nil {
		m.Field6 = val
	}
	return
}

func (m *NinRepPackedNative) SetField7_(val []int32) {
	if m != nil {
		m.Field7 = val
	}
	return
}

func (m *NinRepPackedNative) SetField8_(val []int64) {
	if m != nil {
		m.Field8 = val
	}
	return
}

func (m *NinRepPackedNative) SetField9_(val []uint32) {
	if m != nil {
		m.Field9 = val
	}
	return
}

func (m *NinRepPackedNative) SetField10_(val []int32) {
	if m != nil {
		m.Field10 = val
	}
	return
}

func (m *NinRepPackedNative) SetField11_(val []uint64) {
	if m != nil {
		m.Field11 = val
	}
	return
}

func (m *NinRepPackedNative) SetField12_(val []int64) {
	if m != nil {
		m.Field12 = val
	}
	return
}

func (m *NinRepPackedNative) SetField13_(val []bool) {
	if m != nil {
		m.Field13 = val
	}
	return
}

func (m *NinRepPackedNative) IsNil() bool {
	return m == nil

}

type NinOptNative struct {
	Field1               *float64 `protobuf:"fixed64,1,opt,name=Field1" json:"Field1,omitempty"`
	Field2               *float32 `protobuf:"fixed32,2,opt,name=Field2" json:"Field2,omitempty"`
	Field3               *int32   `protobuf:"varint,3,opt,name=Field3" json:"Field3,omitempty"`
	Field4               *int64   `protobuf:"varint,4,opt,name=Field4" json:"Field4,omitempty"`
	Field5               *uint32  `protobuf:"varint,5,opt,name=Field5" json:"Field5,omitempty"`
	Field6               *uint64  `protobuf:"varint,6,opt,name=Field6" json:"Field6,omitempty"`
	Field7               *int32   `protobuf:"zigzag32,7,opt,name=Field7" json:"Field7,omitempty"`
	Field8               *int64   `protobuf:"zigzag64,8,opt,name=Field8" json:"Field8,omitempty"`
	Field9               *uint32  `protobuf:"fixed32,9,opt,name=Field9" json:"Field9,omitempty"`
	Field10              *int32   `protobuf:"fixed32,10,opt,name=Field10" json:"Field10,omitempty"`
	Field11              *uint64  `protobuf:"fixed64,11,opt,name=Field11" json:"Field11,omitempty"`
	Field12              *int64   `protobuf:"fixed64,12,opt,name=Field12" json:"Field12,omitempty"`
	Field13              *bool    `protobuf:"varint,13,opt,name=Field13" json:"Field13,omitempty"`
	Field14              *string  `protobuf:"bytes,14,opt,name=Field14" json:"Field14,omitempty"`
	Field15              []byte   `protobuf:"bytes,15,opt,name=Field15" json:"Field15,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NinOptNative) Reset()         { *m = NinOptNative{} }
func (m *NinOptNative) String() string { return proto.CompactTextString(m) }
func (*NinOptNative) ProtoMessage()    {}
func (*NinOptNative) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e61ff73369f13d2, []int{2}
}
func (m *NinOptNative) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NinOptNative.Unmarshal(m, b)
}
func (m *NinOptNative) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NinOptNative.Marshal(b, m, deterministic)
}
func (m *NinOptNative) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NinOptNative.Merge(m, src)
}
func (m *NinOptNative) XXX_Size() int {
	return xxx_messageInfo_NinOptNative.Size(m)
}
func (m *NinOptNative) XXX_DiscardUnknown() {
	xxx_messageInfo_NinOptNative.DiscardUnknown(m)
}

var xxx_messageInfo_NinOptNative proto.InternalMessageInfo

func (m *NinOptNative) GetField1() float64 {
	if m != nil && m.Field1 != nil {
		return *m.Field1
	}
	return 0
}

func (m *NinOptNative) GetField2() float32 {
	if m != nil && m.Field2 != nil {
		return *m.Field2
	}
	return 0
}

func (m *NinOptNative) GetField3() int32 {
	if m != nil && m.Field3 != nil {
		return *m.Field3
	}
	return 0
}

func (m *NinOptNative) GetField4() int64 {
	if m != nil && m.Field4 != nil {
		return *m.Field4
	}
	return 0
}

func (m *NinOptNative) GetField5() uint32 {
	if m != nil && m.Field5 != nil {
		return *m.Field5
	}
	return 0
}

func (m *NinOptNative) GetField6() uint64 {
	if m != nil && m.Field6 != nil {
		return *m.Field6
	}
	return 0
}

func (m *NinOptNative) GetField7() int32 {
	if m != nil && m.Field7 != nil {
		return *m.Field7
	}
	return 0
}

func (m *NinOptNative) GetField8() int64 {
	if m != nil && m.Field8 != nil {
		return *m.Field8
	}
	return 0
}

func (m *NinOptNative) GetField9() uint32 {
	if m != nil && m.Field9 != nil {
		return *m.Field9
	}
	return 0
}

func (m *NinOptNative) GetField10() int32 {
	if m != nil && m.Field10 != nil {
		return *m.Field10
	}
	return 0
}

func (m *NinOptNative) GetField11() uint64 {
	if m != nil && m.Field11 != nil {
		return *m.Field11
	}
	return 0
}

func (m *NinOptNative) GetField12() int64 {
	if m != nil && m.Field12 != nil {
		return *m.Field12
	}
	return 0
}

func (m *NinOptNative) GetField13() bool {
	if m != nil && m.Field13 != nil {
		return *m.Field13
	}
	return false
}

func (m *NinOptNative) GetField14() string {
	if m != nil && m.Field14 != nil {
		return *m.Field14
	}
	return ""
}

func (m *NinOptNative) GetField15() []byte {
	if m != nil {
		return m.Field15
	}
	return nil
}

func (m *NinOptNative) SetField1_(val float64) {
	if m != nil {
		*m.Field1 = val
	}

}

func (m *NinOptNative) SetField2_(val float32) {
	if m != nil {
		*m.Field2 = val
	}

}

func (m *NinOptNative) SetField3_(val int32) {
	if m != nil {
		*m.Field3 = val
	}

}

func (m *NinOptNative) SetField4_(val int64) {
	if m != nil {
		*m.Field4 = val
	}

}

func (m *NinOptNative) SetField5_(val uint32) {
	if m != nil {
		*m.Field5 = val
	}

}

func (m *NinOptNative) SetField6_(val uint64) {
	if m != nil {
		*m.Field6 = val
	}

}

func (m *NinOptNative) SetField7_(val int32) {
	if m != nil {
		*m.Field7 = val
	}

}

func (m *NinOptNative) SetField8_(val int64) {
	if m != nil {
		*m.Field8 = val
	}

}

func (m *NinOptNative) SetField9_(val uint32) {
	if m != nil {
		*m.Field9 = val
	}

}

func (m *NinOptNative) SetField10_(val int32) {
	if m != nil {
		*m.Field10 = val
	}

}

func (m *NinOptNative) SetField11_(val uint64) {
	if m != nil {
		*m.Field11 = val
	}

}

func (m *NinOptNative) SetField12_(val int64) {
	if m != nil {
		*m.Field12 = val
	}

}

func (m *NinOptNative) SetField13_(val bool) {
	if m != nil {
		*m.Field13 = val
	}

}

func (m *NinOptNative) SetField14_(val string) {
	if m != nil {
		*m.Field14 = val
	}

}

func (m *NinOptNative) SetField15_(val []byte) {
	if m != nil {
		m.Field15 = val
	}
	return
}

func (m *NinOptNative) IsNil() bool {
	return m == nil

}

type NinOptStruct struct {
	Field1               *float64      `protobuf:"fixed64,1,opt,name=Field1" json:"Field1,omitempty"`
	Field2               *float32      `protobuf:"fixed32,2,opt,name=Field2" json:"Field2,omitempty"`
	Field3               *NinOptNative `protobuf:"bytes,3,opt,name=Field3" json:"Field3,omitempty"`
	Field4               *NinOptNative `protobuf:"bytes,4,opt,name=Field4" json:"Field4,omitempty"`
	Field6               *uint64       `protobuf:"varint,6,opt,name=Field6" json:"Field6,omitempty"`
	Field7               *int32        `protobuf:"zigzag32,7,opt,name=Field7" json:"Field7,omitempty"`
	Field8               *NinOptNative `protobuf:"bytes,8,opt,name=Field8" json:"Field8,omitempty"`
	Field13              *bool         `protobuf:"varint,13,opt,name=Field13" json:"Field13,omitempty"`
	Field14              *string       `protobuf:"bytes,14,opt,name=Field14" json:"Field14,omitempty"`
	Field15              []byte        `protobuf:"bytes,15,opt,name=Field15" json:"Field15,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NinOptStruct) Reset()         { *m = NinOptStruct{} }
func (m *NinOptStruct) String() string { return proto.CompactTextString(m) }
func (*NinOptStruct) ProtoMessage()    {}
func (*NinOptStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e61ff73369f13d2, []int{3}
}
func (m *NinOptStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NinOptStruct.Unmarshal(m, b)
}
func (m *NinOptStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NinOptStruct.Marshal(b, m, deterministic)
}
func (m *NinOptStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NinOptStruct.Merge(m, src)
}
func (m *NinOptStruct) XXX_Size() int {
	return xxx_messageInfo_NinOptStruct.Size(m)
}
func (m *NinOptStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_NinOptStruct.DiscardUnknown(m)
}

var xxx_messageInfo_NinOptStruct proto.InternalMessageInfo

func (m *NinOptStruct) GetField1() float64 {
	if m != nil && m.Field1 != nil {
		return *m.Field1
	}
	return 0
}

func (m *NinOptStruct) GetField2() float32 {
	if m != nil && m.Field2 != nil {
		return *m.Field2
	}
	return 0
}

func (m *NinOptStruct) GetField3() *NinOptNative {
	if m != nil {
		return m.Field3
	}
	return nil
}

func (m *NinOptStruct) GetField4() *NinOptNative {
	if m != nil {
		return m.Field4
	}
	return nil
}

func (m *NinOptStruct) GetField6() uint64 {
	if m != nil && m.Field6 != nil {
		return *m.Field6
	}
	return 0
}

func (m *NinOptStruct) GetField7() int32 {
	if m != nil && m.Field7 != nil {
		return *m.Field7
	}
	return 0
}

func (m *NinOptStruct) GetField8() *NinOptNative {
	if m != nil {
		return m.Field8
	}
	return nil
}

func (m *NinOptStruct) GetField13() bool {
	if m != nil && m.Field13 != nil {
		return *m.Field13
	}
	return false
}

func (m *NinOptStruct) GetField14() string {
	if m != nil && m.Field14 != nil {
		return *m.Field14
	}
	return ""
}

func (m *NinOptStruct) GetField15() []byte {
	if m != nil {
		return m.Field15
	}
	return nil
}

func (m *NinOptStruct) SetField1_(val float64) {
	if m != nil {
		*m.Field1 = val
	}

}

func (m *NinOptStruct) SetField2_(val float32) {
	if m != nil {
		*m.Field2 = val
	}

}

func (m *NinOptStruct) SetField3_(val *NinOptNative) {
	if m != nil {
		m.Field3 = val
	}
	return
}

func (m *NinOptStruct) SetField4_(val *NinOptNative) {
	if m != nil {
		m.Field4 = val
	}
	return
}

func (m *NinOptStruct) SetField6_(val uint64) {
	if m != nil {
		*m.Field6 = val
	}

}

func (m *NinOptStruct) SetField7_(val int32) {
	if m != nil {
		*m.Field7 = val
	}

}

func (m *NinOptStruct) SetField8_(val *NinOptNative) {
	if m != nil {
		m.Field8 = val
	}
	return
}

func (m *NinOptStruct) SetField13_(val bool) {
	if m != nil {
		*m.Field13 = val
	}

}

func (m *NinOptStruct) SetField14_(val string) {
	if m != nil {
		*m.Field14 = val
	}

}

func (m *NinOptStruct) SetField15_(val []byte) {
	if m != nil {
		m.Field15 = val
	}
	return
}

func (m *NinOptStruct) IsNil() bool {
	return m == nil

}

func init() {
	proto.RegisterType((*Nil)(nil), "fuzztests.Nil")
	proto.RegisterType((*NinRepPackedNative)(nil), "fuzztests.NinRepPackedNative")
	proto.RegisterType((*NinOptNative)(nil), "fuzztests.NinOptNative")
	proto.RegisterType((*NinOptStruct)(nil), "fuzztests.NinOptStruct")
}

func init() { proto.RegisterFile("fuzz.proto", fileDescriptor_9e61ff73369f13d2) }

var fileDescriptor_9e61ff73369f13d2 = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0xd3, 0xcf, 0x6e, 0xda, 0x40,
	0x10, 0xc7, 0x71, 0x8d, 0x87, 0xbf, 0x1b, 0x28, 0xc4, 0x87, 0xed, 0x28, 0xaa, 0xaa, 0x15, 0xa7,
	0x39, 0xe1, 0x60, 0x4c, 0x42, 0xae, 0x39, 0xf4, 0x48, 0xab, 0xf4, 0x09, 0x12, 0x70, 0xa8, 0xd5,
	0x34, 0x46, 0x64, 0x69, 0xd5, 0x1c, 0x7b, 0xea, 0xdb, 0xf5, 0x19, 0xfa, 0x06, 0x7d, 0x84, 0xaa,
	0x4e, 0x3c, 0x3b, 0x9c, 0x22, 0xa4, 0xde, 0xcc, 0x7e, 0x58, 0x21, 0xbe, 0x3f, 0xd9, 0x98, 0xdb,
	0xdd, 0xe3, 0xe3, 0x78, 0xb3, 0x2d, 0x7d, 0x19, 0x77, 0xff, 0x3d, 0xfb, 0xfc, 0xc1, 0x3f, 0x9c,
	0x9c, 0xae, 0x0b, 0xff, 0x69, 0x77, 0x33, 0x5e, 0x96, 0x5f, 0x92, 0x65, 0xb9, 0xca, 0xb7, 0xdf,
	0xbf, 0x25, 0xd5, 0x97, 0x6e, 0x76, 0xb7, 0xc9, 0xba, 0x5c, 0x97, 0xd5, 0x87, 0xea, 0xe9, 0xe9,
	0xf2, 0xa8, 0x69, 0x70, 0x51, 0xdc, 0x8d, 0x7e, 0xa2, 0x89, 0x17, 0xc5, 0xfd, 0x55, 0xbe, 0xf9,
	0x70, 0xbd, 0xfc, 0x9c, 0xaf, 0x16, 0xd7, 0xbe, 0xf8, 0x9a, 0xc7, 0x27, 0xa6, 0xf5, 0xae, 0xc8,
	0xef, 0x56, 0x13, 0x02, 0x87, 0x0c, 0x97, 0xd1, 0x10, 0xae, 0x9e, 0x4f, 0xc4, 0x52, 0x8a, 0x1c,
	0x72, 0xa4, 0x2c, 0x15, 0x9b, 0x12, 0x3a, 0xe4, 0xa6, 0xb2, 0xa9, 0x58, 0x46, 0x0d, 0x87, 0x8c,
	0xca, 0x32, 0xb1, 0x19, 0x35, 0x1d, 0x72, 0x5f, 0xd9, 0x4c, 0xec, 0x8c, 0x5a, 0x0e, 0xb9, 0xa1,
	0xec, 0x4c, 0xec, 0x9c, 0xda, 0x0e, 0xf9, 0x58, 0xd9, 0xb9, 0xd8, 0x9c, 0x3a, 0x0e, 0x39, 0x56,
	0x36, 0x17, 0xbb, 0xa0, 0xae, 0x43, 0x6e, 0x2b, 0xbb, 0x88, 0xdf, 0x98, 0xf6, 0xd3, 0x3f, 0x3d,
	0x25, 0xe3, 0x90, 0x07, 0x15, 0xd6, 0x47, 0x41, 0x27, 0x74, 0xe4, 0x90, 0x5b, 0x5a, 0x27, 0x41,
	0x53, 0xea, 0x39, 0xe4, 0xa1, 0xd6, 0x34, 0xe8, 0x94, 0xfa, 0x0e, 0xb9, 0xa3, 0x75, 0x3a, 0xfa,
	0x81, 0xa6, 0xb7, 0x28, 0xee, 0xdf, 0x6f, 0xfc, 0xf3, 0x08, 0x56, 0x8d, 0x00, 0x1c, 0x06, 0xb0,
	0x6a, 0x00, 0xe0, 0x48, 0xe2, 0x5b, 0x15, 0x1f, 0xb8, 0x29, 0xe1, 0xad, 0x0a, 0x0f, 0x8c, 0x12,
	0xdd, 0xaa, 0xe8, 0xc0, 0x7d, 0x09, 0x6e, 0x55, 0x70, 0xe0, 0x86, 0xc4, 0xb6, 0x2a, 0x36, 0xf0,
	0xb1, 0x84, 0xb6, 0x2a, 0x34, 0x70, 0x2c, 0x91, 0xad, 0x8a, 0x0c, 0xdc, 0x96, 0xc0, 0xa4, 0x03,
	0x03, 0x0f, 0x42, 0x5c, 0xd2, 0x71, 0x81, 0x5b, 0x21, 0x2c, 0xe9, 0xb0, 0xc0, 0xc3, 0x10, 0x95,
	0x74, 0x54, 0xe0, 0x8e, 0x04, 0x0d, 0x92, 0xd1, 0x2b, 0x07, 0xdc, 0xad, 0x25, 0x0b, 0x32, 0xa3,
	0x81, 0x03, 0xee, 0xd5, 0x32, 0x1b, 0xfd, 0x8a, 0xea, 0x11, 0x3e, 0xfa, 0xed, 0x6e, 0xe9, 0x0f,
	0x1e, 0x21, 0xd9, 0x1b, 0xe1, 0x28, 0x7d, 0x3d, 0x96, 0xb7, 0x74, 0xac, 0xd7, 0x95, 0x75, 0x92,
	0xbd, 0x75, 0x5e, 0xbc, 0x90, 0x1d, 0x3c, 0x4f, 0xb2, 0x37, 0xcf, 0x8b, 0x3f, 0x30, 0xff, 0xbf,
	0x45, 0x2f, 0x1b, 0x7f, 0x7e, 0xbf, 0x85, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x5b, 0xe8,
	0xa3, 0xb8, 0x04, 0x00, 0x00,
}

func (this *Nil) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&fuzztests.Nil{")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *NinRepPackedNative) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 17)
	s = append(s, "&fuzztests.NinRepPackedNative{")
	if this.Field1 != nil {
		s = append(s, "Field1: "+fmt.Sprintf("%#v", this.Field1)+",\n")
	}
	if this.Field2 != nil {
		s = append(s, "Field2: "+fmt.Sprintf("%#v", this.Field2)+",\n")
	}
	if this.Field3 != nil {
		s = append(s, "Field3: "+fmt.Sprintf("%#v", this.Field3)+",\n")
	}
	if this.Field4 != nil {
		s = append(s, "Field4: "+fmt.Sprintf("%#v", this.Field4)+",\n")
	}
	if this.Field5 != nil {
		s = append(s, "Field5: "+fmt.Sprintf("%#v", this.Field5)+",\n")
	}
	if this.Field6 != nil {
		s = append(s, "Field6: "+fmt.Sprintf("%#v", this.Field6)+",\n")
	}
	if this.Field7 != nil {
		s = append(s, "Field7: "+fmt.Sprintf("%#v", this.Field7)+",\n")
	}
	if this.Field8 != nil {
		s = append(s, "Field8: "+fmt.Sprintf("%#v", this.Field8)+",\n")
	}
	if this.Field9 != nil {
		s = append(s, "Field9: "+fmt.Sprintf("%#v", this.Field9)+",\n")
	}
	if this.Field10 != nil {
		s = append(s, "Field10: "+fmt.Sprintf("%#v", this.Field10)+",\n")
	}
	if this.Field11 != nil {
		s = append(s, "Field11: "+fmt.Sprintf("%#v", this.Field11)+",\n")
	}
	if this.Field12 != nil {
		s = append(s, "Field12: "+fmt.Sprintf("%#v", this.Field12)+",\n")
	}
	if this.Field13 != nil {
		s = append(s, "Field13: "+fmt.Sprintf("%#v", this.Field13)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *NinOptNative) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 19)
	s = append(s, "&fuzztests.NinOptNative{")
	if this.Field1 != nil {
		s = append(s, "Field1: "+valueToGoStringFuzz(this.Field1, "float64")+",\n")
	}
	if this.Field2 != nil {
		s = append(s, "Field2: "+valueToGoStringFuzz(this.Field2, "float32")+",\n")
	}
	if this.Field3 != nil {
		s = append(s, "Field3: "+valueToGoStringFuzz(this.Field3, "int32")+",\n")
	}
	if this.Field4 != nil {
		s = append(s, "Field4: "+valueToGoStringFuzz(this.Field4, "int64")+",\n")
	}
	if this.Field5 != nil {
		s = append(s, "Field5: "+valueToGoStringFuzz(this.Field5, "uint32")+",\n")
	}
	if this.Field6 != nil {
		s = append(s, "Field6: "+valueToGoStringFuzz(this.Field6, "uint64")+",\n")
	}
	if this.Field7 != nil {
		s = append(s, "Field7: "+valueToGoStringFuzz(this.Field7, "int32")+",\n")
	}
	if this.Field8 != nil {
		s = append(s, "Field8: "+valueToGoStringFuzz(this.Field8, "int64")+",\n")
	}
	if this.Field9 != nil {
		s = append(s, "Field9: "+valueToGoStringFuzz(this.Field9, "uint32")+",\n")
	}
	if this.Field10 != nil {
		s = append(s, "Field10: "+valueToGoStringFuzz(this.Field10, "int32")+",\n")
	}
	if this.Field11 != nil {
		s = append(s, "Field11: "+valueToGoStringFuzz(this.Field11, "uint64")+",\n")
	}
	if this.Field12 != nil {
		s = append(s, "Field12: "+valueToGoStringFuzz(this.Field12, "int64")+",\n")
	}
	if this.Field13 != nil {
		s = append(s, "Field13: "+valueToGoStringFuzz(this.Field13, "bool")+",\n")
	}
	if this.Field14 != nil {
		s = append(s, "Field14: "+valueToGoStringFuzz(this.Field14, "string")+",\n")
	}
	if this.Field15 != nil {
		s = append(s, "Field15: "+valueToGoStringFuzz(this.Field15, "byte")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *NinOptStruct) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&fuzztests.NinOptStruct{")
	if this.Field1 != nil {
		s = append(s, "Field1: "+valueToGoStringFuzz(this.Field1, "float64")+",\n")
	}
	if this.Field2 != nil {
		s = append(s, "Field2: "+valueToGoStringFuzz(this.Field2, "float32")+",\n")
	}
	if this.Field3 != nil {
		s = append(s, "Field3: "+fmt.Sprintf("%#v", this.Field3)+",\n")
	}
	if this.Field4 != nil {
		s = append(s, "Field4: "+fmt.Sprintf("%#v", this.Field4)+",\n")
	}
	if this.Field6 != nil {
		s = append(s, "Field6: "+valueToGoStringFuzz(this.Field6, "uint64")+",\n")
	}
	if this.Field7 != nil {
		s = append(s, "Field7: "+valueToGoStringFuzz(this.Field7, "int32")+",\n")
	}
	if this.Field8 != nil {
		s = append(s, "Field8: "+fmt.Sprintf("%#v", this.Field8)+",\n")
	}
	if this.Field13 != nil {
		s = append(s, "Field13: "+valueToGoStringFuzz(this.Field13, "bool")+",\n")
	}
	if this.Field14 != nil {
		s = append(s, "Field14: "+valueToGoStringFuzz(this.Field14, "string")+",\n")
	}
	if this.Field15 != nil {
		s = append(s, "Field15: "+valueToGoStringFuzz(this.Field15, "byte")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringFuzz(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
